apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: pepsico-dev-template2
  title: Pepsico Dev Flow template 1.2
  description: The Pepsico Dev Flow 2
  tags:
    - service-now
    - pepsico
    - pepsico-dev-flow
    - argocd
    - azuredevops
    - tekton
    - sonarqube
spec:
  owner: rhdh
  type: service
  

  parameters:
    - title: Provide Dev Flow Variables 
      required:
        - approvalcode
        - component_id
      properties:
        approvalcode:
          title: Service Now Approval Code
          type: string 
        component_id:
          title: Application Project Name
          type: string 
        artifact_id:
          title: Artifact Id
          type: string
          default: pepsico-app
          description: Maven Artifact Id
        group_id:
          title: Group Id
          type: string
          default: pepsico-mvn
          description: Maven Group Id
        java_package_name:
          title: Package Name
          default: com.pepsico
          type: string
          description: Name for the package. eg (com.pepsico.blah)
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: A pepsico app
    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
            - Quay
            - JFrog
      dependencies:
        image_registry:
          oneOf:
          - properties:
              image_registry:
                 enum:
                   - Openshift
              image_host:
                title: Image Host
                type: string
                description: Host for storing image
                default: image-registry.openshift-image-registry.svc:5000
              image_tag:
                title: Image Tag
                default: latest             
                type: string
                description: Build Image tag
          - properties:
              image_registry:
                  enum:
                    - Quay
              image_host:
                 title: Image Host
                 type: string
                 description: Host for storing image
                 default: quay-qmdjh.apps.cluster-qmdjh.qmdjh.sandbox1439.opentlc.com
              image_organization:
                 title: Organization
                 type: string
                 description: Name of the Quay Organization
                 default: quayadmin
              image_tag:
                 title: Image Tag
                 default: latest
                 type: string
                 description: Build Image tag
          - properties:
              image_registry:
                 enum:
                  - JFrog
              image_host:
                 title: Image Host
                 type: string
                 description: Host for storing image
                 default: jfrog-qmdjh.apps.cluster-qmdjh.qmdjh.sandbox1439.opentlc.com  
              image_organization:
                 title: Organization
                 type: string
                 description: Name of the JFrog Organization
                 default: jfrogadmin
              image_tag:
                 title: Image Tag
                 default: latest
                 type: string
                 description: Build Image tag
    - title: Application repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-d6h6z.d6h6z.sandbox457.opentlc.com
              enum:
                - gitlab-gitlab.apps.cluster-d6h6z.d6h6z.sandbox457.opentlc.com
            owner:
              title: Repo Owner
              type: string
              description: Your SCM host organization/group
              default: development
              enum:
                - development 
            verify_commits:
              title: Verify Commits
              type: string
              description: Verify Git repository commits using Red Hatâ€™s Trusted Artifact Signer (TAS)
              default: disabled
              enum:
                - enabled
                - disabled

 
    - title: Pipeline Selection
      required:
        - pipeline
      properties:
        pipeline:
          title: Pick Your Project's Pipeline
          type: string
          description: This will select the pipeline type for your application
          default: ../../../skeletons/azure/
          enum:
            - ../../../skeletons/tekton/
            - ../../../skeletons/azure/
          enumNames:
            - Tekton
            - Azure
      dependencies:
        ci:
          oneOf:
            - properties:
                # Show no extra properties when GitHub Actions is selected
                ci:
                  const: ../../../skeletons/azure/
            - required:
                - image_registry
                - image_host
                - image_organization
                - cluster_domain_url
                - namespace
              properties:
                cluster_domain_url:
                  title: Cluster Domain Url
                  type: string
                  description: The Cluster Domain URL where the aplication will be deployed to (usually starts with '.apps')
                  default: ".apps.cluster-d6h6z.d6h6z.sandbox457.opentlc.com"
                namespace:
                  title: Project Namespace
                  type: string
                  description: The Project Namespace for deploying resources to the cluster
                  default: my-springboot-app
                ci:
                  const: ../../../skeletons/tekton/
                image_registry:
                  title: Image Registry
                  type: string
                  enum:
                    - Openshift
                    - Quay
              dependencies:
                image_registry:
                  oneOf:
                    - properties:
                        image_registry:
                          enum:
                            - Openshift
                        image_host:
                          title: Image Host
                          type: string
                          description: Host for storing image
                          default: image-registry.openshift-image-registry.svc:5000
                    - properties:
                        image_registry:
                          enum:
                            - Quay
                        image_host:
                          title: Image Host
                          type: string
                          description: Host for storing image
                          default: quay.io
                        image_organization:
                          title: Registry Organization
                          type: string
                          description: Name of the Quay Organization
                          default: 'redhat_na_ssa'

  steps:
  
    - id: snowretrieve
      name: Verify ServiceNow Approval
      action: servicenow:now:table:retrieveRecord
      input:
        tableName: u_employeename
        sysId: "${{ parameters.approvalcode }}"
        
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.component_id }}-dev
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: ${{ user.entity.metadata.name }}
          cluster: .apps.cluster-qmdjh.qmdjh.sandbox1439.opentlc.com
          host: ${{ parameters.repo.host }}
          destination: ${{ parameters.repo.owner }}/${{ parameters.component_id }}
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.component_id }}
          port: 8080
          verify_commits: ${{ parameters.repo.verify_commits }}

    - id: pub-verify
      name: Publish Verification
      action: debug:log
      input:
        message:  ${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}
      
    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}"
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}-gitops.git
          source_repository: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_owner: ${{ parameters.repo.owner }}
          cluster: .apps.cluster-qmdjh.qmdjh.sandbox1439.opentlc.com
          namespace: ${{ parameters.component_id }}-dev
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.component_id }}
          image_tag: ${{ parameters.image_tag }}
          port: 8080
          repository_host: ${{ parameters.repo.host }}
          deployment_name: quarkus-template
          user: ${{ user.entity.metadata.name }}
          verify_commits: ${{ parameters.repo.verify_commits }}
        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}-gitops"
        title: gitops resources for ${{ parameters.component_id }}
        description: gitops resources for ${{ parameters.component_id }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.component_id }}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.component_id }}-gitops.git
        path: 'argocd/'


        
    - id: sonarq
      name: Enabling SonarQube
      action: roadiehq:utils:sleep
      input:
        amount: 1

    - id: argocd-verification
      name: ARGOCD Verification
      action: debug:log
      input:
        message: repo  https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.component_id }}-gitops.git
      

    - id: provison pipeline
      action: azure:pipeline:create
      input:
        organization: ${{ parameters.orgName }}
        project: "Developer Hub Demo"
        folder: "/"
        name: "azure-${{ parameters.repoName }}-pipeline"
        repositoryId: ${{ steps.publish.output.repositoryId }}
        repositoryName: ${{ parameters.repoName }}

    - id: publish-gitopsazure
      name: Publishing to Resource Repository
      action: publish:azure
      input:
        repoUrl: dev.azure.com?repo=${{ parameters.repoName }}-gitops&organization=${{ parameters.orgName }}&owner=Developer%20Hub%20Demo
        description: ${{ parameters.description }}
        defaultBranch: main
        gitAuthorName: "Pepsidev"
        gitAuthorEmail: "dlinnema@redhat.com"
        sourcePath: ./tenant-gitops

    - id: gitlab-verification
      name: Gitlab Verification
      action: debug:log
      input:
        message: Your Code is located at https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}.git
      
    - id: pipeline-verification
      name: Pipeline Verification
      action: debug:log
      input:
        message: Pipeline Provisioned with ${{ parameters.pipeline }}

    - id: reg-verification
      name: Registry Verification
      action: debug:log
      input:
        message: Selected Image Registry is ${{ parameters.image_registry }}
      

    
        
        
  output:
    text:
    - title: Service Now Approval Code
      content: Flow Approved with this code ID $${{ steps.snowretrieve.output.result.sys_id }}
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}



       
      
        
       

