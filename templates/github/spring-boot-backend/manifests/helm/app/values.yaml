# Default values for springboot-template.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

app:
  name: ${{ values.component_id }}

namespace:
  enabled: true
  argocd:
    name: default

replicaCount: 1

image:
  pullPolicy: IfNotPresent
  registry: Quay
  host: quay.io
  organization: redhat_na_ssa
  name: ${{ values.image_name }}
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets:
  - name: ${{ values.component_id }}-registry-creds

nameOverride: "${{ values.component_id }}"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ${{ values.component_id }}

podAnnotations: 
   sidecar.istio.io/inject: 'true'

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: ${{values.port}}

# route: 
#   host: ""
#   path: /

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  registryEncodedDockerConfigJson: ewogICJhdXRocyI6IHsKICAgICJxdWF5LmlvIjogewogICAgICAiYXV0aCI6ICJjbVZrYUdGMFgyNWhYM056WVN0aGVuVnlaWEJwY0dWc2FXNWxPamczTmpkSlNqYzJObEJVTUVGUFR6Z3dNRnBETWs0ME4wTlhSVlZEV0RVMFRrVkxVVmd4VjA5T1JFRktPVGhMUlRsWldVd3lTazVXUXpsT1FVVXlTVGM9IiwKICAgICAgImVtYWlsIjogIiIKICAgIH0KICB9Cn0=